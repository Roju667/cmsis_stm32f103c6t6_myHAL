
cmsis_stm32f103c6t6_mylibs.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000108  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000238  08000240  00010240  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000238  08000238  00010240  2**0
                  CONTENTS
  4 .ARM          00000000  08000238  08000238  00010240  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000238  08000240  00010240  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000238  08000238  00010238  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800023c  0800023c  0001023c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010240  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000240  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000240  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00010240  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000308  00000000  00000000  00010269  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000001a9  00000000  00000000  00010571  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000070  00000000  00000000  00010720  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000048  00000000  00000000  00010790  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000012a  00000000  00000000  000107d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000008dc  00000000  00000000  00010902  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000532ff  00000000  00000000  000111de  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000644dd  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000000ac  00000000  00000000  00064530  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	08000220 	.word	0x08000220

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	08000220 	.word	0x08000220

08000170 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 8000170:	b480      	push	{r7}
 8000172:	af00      	add	r7, sp, #0
    /* Loop forever */
	for(;;);
 8000174:	e7fe      	b.n	8000174 <main+0x4>

08000176 <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8000176:	b480      	push	{r7}
 8000178:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 800017a:	bf00      	nop
 800017c:	46bd      	mov	sp, r7
 800017e:	bc80      	pop	{r7}
 8000180:	4770      	bx	lr
	...

08000184 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000184:	480d      	ldr	r0, [pc, #52]	; (80001bc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000186:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000188:	f7ff fff5 	bl	8000176 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800018c:	480c      	ldr	r0, [pc, #48]	; (80001c0 <LoopForever+0x6>)
  ldr r1, =_edata
 800018e:	490d      	ldr	r1, [pc, #52]	; (80001c4 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000190:	4a0d      	ldr	r2, [pc, #52]	; (80001c8 <LoopForever+0xe>)
  movs r3, #0
 8000192:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000194:	e002      	b.n	800019c <LoopCopyDataInit>

08000196 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000196:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000198:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800019a:	3304      	adds	r3, #4

0800019c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800019c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800019e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80001a0:	d3f9      	bcc.n	8000196 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80001a2:	4a0a      	ldr	r2, [pc, #40]	; (80001cc <LoopForever+0x12>)
  ldr r4, =_ebss
 80001a4:	4c0a      	ldr	r4, [pc, #40]	; (80001d0 <LoopForever+0x16>)
  movs r3, #0
 80001a6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80001a8:	e001      	b.n	80001ae <LoopFillZerobss>

080001aa <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80001aa:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80001ac:	3204      	adds	r2, #4

080001ae <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80001ae:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80001b0:	d3fb      	bcc.n	80001aa <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80001b2:	f000 f811 	bl	80001d8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80001b6:	f7ff ffdb 	bl	8000170 <main>

080001ba <LoopForever>:

LoopForever:
    b LoopForever
 80001ba:	e7fe      	b.n	80001ba <LoopForever>
  ldr   r0, =_estack
 80001bc:	20002800 	.word	0x20002800
  ldr r0, =_sdata
 80001c0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80001c4:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80001c8:	08000240 	.word	0x08000240
  ldr r2, =_sbss
 80001cc:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80001d0:	2000001c 	.word	0x2000001c

080001d4 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80001d4:	e7fe      	b.n	80001d4 <ADC1_2_IRQHandler>
	...

080001d8 <__libc_init_array>:
 80001d8:	b570      	push	{r4, r5, r6, lr}
 80001da:	2600      	movs	r6, #0
 80001dc:	4d0c      	ldr	r5, [pc, #48]	; (8000210 <__libc_init_array+0x38>)
 80001de:	4c0d      	ldr	r4, [pc, #52]	; (8000214 <__libc_init_array+0x3c>)
 80001e0:	1b64      	subs	r4, r4, r5
 80001e2:	10a4      	asrs	r4, r4, #2
 80001e4:	42a6      	cmp	r6, r4
 80001e6:	d109      	bne.n	80001fc <__libc_init_array+0x24>
 80001e8:	f000 f81a 	bl	8000220 <_init>
 80001ec:	2600      	movs	r6, #0
 80001ee:	4d0a      	ldr	r5, [pc, #40]	; (8000218 <__libc_init_array+0x40>)
 80001f0:	4c0a      	ldr	r4, [pc, #40]	; (800021c <__libc_init_array+0x44>)
 80001f2:	1b64      	subs	r4, r4, r5
 80001f4:	10a4      	asrs	r4, r4, #2
 80001f6:	42a6      	cmp	r6, r4
 80001f8:	d105      	bne.n	8000206 <__libc_init_array+0x2e>
 80001fa:	bd70      	pop	{r4, r5, r6, pc}
 80001fc:	f855 3b04 	ldr.w	r3, [r5], #4
 8000200:	4798      	blx	r3
 8000202:	3601      	adds	r6, #1
 8000204:	e7ee      	b.n	80001e4 <__libc_init_array+0xc>
 8000206:	f855 3b04 	ldr.w	r3, [r5], #4
 800020a:	4798      	blx	r3
 800020c:	3601      	adds	r6, #1
 800020e:	e7f2      	b.n	80001f6 <__libc_init_array+0x1e>
 8000210:	08000238 	.word	0x08000238
 8000214:	08000238 	.word	0x08000238
 8000218:	08000238 	.word	0x08000238
 800021c:	0800023c 	.word	0x0800023c

08000220 <_init>:
 8000220:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000222:	bf00      	nop
 8000224:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000226:	bc08      	pop	{r3}
 8000228:	469e      	mov	lr, r3
 800022a:	4770      	bx	lr

0800022c <_fini>:
 800022c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800022e:	bf00      	nop
 8000230:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000232:	bc08      	pop	{r3}
 8000234:	469e      	mov	lr, r3
 8000236:	4770      	bx	lr
