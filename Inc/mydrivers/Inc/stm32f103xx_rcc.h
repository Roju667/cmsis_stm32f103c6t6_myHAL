/*
 * stm32f103xx_rcc.h
 *
 *  Created on: Mar 20, 2022
 *      Author: pawel
 */

#ifndef MYDRIVERS_INC_STM32F103XX_RCC_H_
#define MYDRIVERS_INC_STM32F103XX_RCC_H_

#include "stm32f1xx.h"


// struct to save all the clock frequencies
typedef struct
{
	uint32_t sysclk;

	uint32_t hclk;

	uint32_t pclk1;

	uint32_t pclk2;

} rcc_clock_freqs_t;

// HSI/HSE speed @rcc_oscillators_frequencies
#define RCC_HSI_FREQUENCY	8000000U
#define RCC_HSE_FREQUENCY	0U

// AHB Prescaler
#define RCC_HPRE_PRESCALER_NODIV	0U
#define RCC_HPRE_PRESCALER_DIV2		8U
#define RCC_HPRE_PRESCALER_DIV4		9U
#define RCC_HPRE_PRESCALER_DIV8		10U
#define RCC_HPRE_PRESCALER_DIV16	11U
#define RCC_HPRE_PRESCALER_DIV64	12U
#define RCC_HPRE_PRESCALER_DIV128	13U
#define RCC_HPRE_PRESCALER_DIV256	14U
#define RCC_HPRE_PRESCALER_DIV512	15U

// ABP Prescaler
#define RCC_ABP_PRESCALER_NODIV 	0U
#define RCC_ABP_PRESCALER_DIV2 		4U
#define RCC_ABP_PRESCALER_DIV4 		5U
#define RCC_ABP_PRESCALER_DIV8 		6U
#define RCC_ABP_PRESCALER_DIV16 	7U

/*
 * RCC MACROS
 */

// AHB peripherals enable
#define RCC_CLOCK_ENABLE_DMA1() 	RCC->AHBENR |= RCC_AHBENR_DMA1EN
#define RCC_CLOCK_ENABLE_SRAM() 	RCC->AHBENR |= RCC_AHBENR_SRAMEN
#define RCC_CLOCK_ENABLE_CRC()		RCC->AHBENR |= RCC_AHBENR_CRCEN


// APB2 peripherals enable
#define RCC_CLOCK_ENABLE_AFIO()		RCC->APB2ENR |= RCC_APB2ENR_AFIOEN
#define RCC_CLOCK_ENABLE_IOPA()		RCC->APB2ENR |= RCC_APB2ENR_IOPAEN
#define RCC_CLOCK_ENABLE_IOPB()		RCC->APB2ENR |= RCC_APB2ENR_IOPBEN
#define RCC_CLOCK_ENABLE_IOPC()		RCC->APB2ENR |= RCC_APB2ENR_IOPCEN
#define RCC_CLOCK_ENABLE_IOPD()		RCC->APB2ENR |= RCC_APB2ENR_IOPDEN
#define RCC_CLOCK_ENABLE_ADC1()		RCC->APB2ENR |= RCC_APB2ENR_ADC1EN
#define RCC_CLOCK_ENABLE_ADC2()		RCC->APB2ENR |= RCC_APB2ENR_ADC2EN
#define RCC_CLOCK_ENABLE_TIM1()		RCC->APB2ENR |= RCC_APB2ENR_TIM1EN
#define RCC_CLOCK_ENABLE_SPI1()		RCC->APB2ENR |= RCC_APB2ENR_SPI1EN
#define RCC_CLOCK_ENABLE_USART1()	RCC->APB2ENR |= RCC_APB2ENR_USART1EN


// APB1 peripherals enable
#define RCC_CLOCK_ENABLE_TIM2()		RCC->APB1ENR |= RCC_APB1ENR_TIM2EN
#define RCC_CLOCK_ENABLE_TIM3()		RCC->APB1ENR |= RCC_APB1ENR_TIM3EN
#define RCC_CLOCK_ENABLE_WWDG()		RCC->APB1ENR |= RCC_APB1ENR_WWDGEN
#define RCC_CLOCK_ENABLE_USART2()	RCC->APB1ENR |= RCC_APB1ENR_USART2EN
#define RCC_CLOCK_ENABLE_I2C1()		RCC->APB1ENR |= RCC_APB1ENR_I2C1EN
#define RCC_CLOCK_ENABLE_USB()		RCC->APB1ENR |= RCC_APB1ENR_USBEN
#define RCC_CLOCK_ENABLE_CAN()		RCC->APB1ENR |= RCC_APB1ENR_CANEN
#define RCC_CLOCK_ENABLE_BKP()		RCC->APB1ENR |= RCC_APB1ENR_BKPEN
#define RCC_CLOCK_ENABLE_PWR()		RCC->APB1ENR |= RCC_APB1ENR_PWREN


// APB2 peripherals reset
#define RCC_RESET_AFIO()		RCC->APB2RSTR |= RCC_APB2RSTR_AFIORST
#define RCC_RESET_IOPA()		RCC->APB2RSTR |= RCC_APB2RSTR_IOPARST
#define RCC_RESET_IOPB()		RCC->APB2RSTR |= RCC_APB2RSTR_IOPBRST
#define RCC_RESET_IOPC()		RCC->APB2RSTR |= RCC_APB2RSTR_IOPCRST
#define RCC_RESET_IOPD()		RCC->APB2RSTR |= RCC_APB2RSTR_IOPDRST
#define RCC_RESET_ADC1()		RCC->APB2RSTR |= RCC_APB2RSTR_ADC1RST
#define RCC_RESET_ADC2()		RCC->APB2RSTR |= RCC_APB2RSTR_ADC2RST
#define RCC_RESET_TIM1()		RCC->APB2RSTR |= RCC_APB2RSTR_TIM1RST
#define RCC_RESET_SPI1()		RCC->APB2RSTR |= RCC_APB2RSTR_SPI1RST
#define RCC_RESET_USART1()		RCC->APB2RSTR |= RCC_APB2RSTR_USART1RST


// APB1 peripherals reset
#define RCC_RESET_TIM2()		RCC->APB1RSTR |= RCC_APB1RSTR_TIM2RST
#define RCC_RESET_TIM3()		RCC->APB1RSTR |= RCC_APB1RSTR_TIM3RST
#define RCC_RESET_WWDG()		RCC->APB1RSTR |= RCC_APB1RSTR_WWDGRST
#define RCC_RESET_USART2()		RCC->APB1RSTR |= RCC_APB1RSTR_USART2RST
#define RCC_RESET_I2C1()		RCC->APB1RSTR |= RCC_APB1RSTR_I2C1RST
#define RCC_RESET_USB()			RCC->APB1RSTR |= RCC_APB1RSTR_USBRST
#define RCC_RESET_CAN()			RCC->APB1RSTR |= RCC_APB1RSTR_CANRST
#define RCC_RESET_BKP()			RCC->APB1RSTR |= RCC_APB1RSTR_BKPRST
#define RCC_RESET_PWR()			RCC->APB1RSTR |= RCC_APB1RSTR_PWRRST



#endif /* MYDRIVERS_INC_STM32F103XX_RCC_H_ */
